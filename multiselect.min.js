"use strict";angular.module("jackrabbitsgroup.angular-multiselect",[]).directive("jrgMultiselect",["jrgMultiselectData","jrgLibArray","$timeout","$filter",function(jrgMultiselectData,libArray,$timeout,$filter){return{scope:{selectOpts:"=",ngModel:"=",config:"=?"},replace:!0,template:function(element,attrs){var defaultsAttrs={placeholder:"Type to search",minLengthCreate:1,debug:!1};for(var xx in defaultsAttrs)void 0===attrs[xx]&&(attrs[xx]=defaultsAttrs[xx]);var html="<div>";return html+="<div id='{{id}}' class='jrg-multiselect'>",html+="<div id='{{ids.displayBox}}' class='jrg-multiselect-display-box' ng-click='focusInput({})'><div id='{{ids.selectedOpts}}' class='jrg-multiselect-selected-opts'><div ng-repeat='opt in selectedOpts' class='jrg-multiselect-selected-opt'><div class='jrg-multiselect-selected-opt-remove' ng-click='removeOpt(opt, {})'>X</div> {{opt.name}}</div></div><div class='jrg-multiselect-input-div'><input id='{{ids.input}}' type='text' ng-change='filterOpts({})' placeholder='"+attrs.placeholder+"' class='jrg-multiselect-input' ng-model='modelInput' ng-click='clickInput({})' /></div></div><div class='jrg-multiselect-dropdown-cont'><div id='{{ids.dropdown}}' class='jrg-multiselect-dropdown'>",html+="<div class='jrg-multiselect-dropdown-opt' ng-repeat='opt in filteredOpts' ng-click='selectOpt(opt, {})'>{{opt.name}}</div>",html+="<div class='jrg-multiselect-dropdown-opt' ng-show='config1.createNew && createNewAllowed && filteredOpts.length <1' ng-click='createNewOpt({})'>[Create New]</div><div class='jrg-multiselect-dropdown-opt' ng-show='loadingOpt'>Loading..</div>",html+="</div>",html+="</div>",html+="</div>",html+="</div>"},link:function(scope,element,attrs){function initNgModel(){void 0===scope.ngModel?scope.ngModel=[]:"string"==typeof scope.ngModel&&(scope.ngModel=[scope.ngModel]),scope.ngModel.length<1&&(scope.selectedOpts=[])}function selectOpts(optsArray){for(var ii=0;ii<optsArray.length;ii++)for(var xx in optsList){var index1=libArray.findArrayIndex(optsList[xx],"val",optsArray[ii],{});if(index1>-1){scope.selectOpt(optsList[xx][index1],{});break}}}function removeOpts(params){var xx,defaults={displayOnly:!1};for(xx in defaults)void 0===params[xx]&&(params[xx]=defaults[xx]);if(void 0!==params.valsToRemove&&params.valsToRemove.length>0){var ii;for(ii=0;ii<params.valsToRemove.length;ii++){var index1=libArray.findArrayIndex(scope.opts,"val",params.valsToRemove[ii],{});index1>-1&&(params.displayOnly?removeDisplayOpt(scope.opts[index1],{bulkRemove:!0}):scope.removeOpt(scope.opts[index1],{bulkRemove:!0}))}scope.filterOpts({})}}function removeDisplayOpt(opt,params){opt.selected="0";var index1=libArray.findArrayIndex(scope.selectedOpts,"val",opt.val,{});index1>-1&&scope.selectedOpts.splice(index1,1),void 0!==params.bulkRemove&&params.bulkRemove||scope.filterOpts({})}function formOpts(params){var keys,ii;if(void 0!==params.keys)keys=params.keys;else{keys=[];var counter=0;for(var xx in optsList)keys[counter]=xx,counter++}for(scope.opts=[],ii=0;ii<keys.length;ii++)scope.opts=scope.opts.concat(optsList[keys[ii]]);for(ii=0;ii<scope.opts.length;ii++){var index1=libArray.findArrayIndex(scope.selectedOpts,"val",scope.opts[ii].val,{});0>index1&&(scope.opts[ii].selected="0")}}function createNewCheck(){var valid=!1,val=scope.modelInput;if(val.length>=attrs.minLengthCreate){var index1=libArray.findArrayIndex(scope.opts,"val",val,{});0>index1&&(valid=!0)}return valid}var xx,defaultsAttrs={placeholder:"Type to search",minLengthCreate:1,debug:!1};for(xx in defaultsAttrs)void 0===attrs[xx]&&(attrs[xx]=defaultsAttrs[xx]);attrs.id="jrgMultiselect"+Math.random().toString(36).substring(7),attrs.ids={displayBox:attrs.id+"DisplayBox",input:attrs.id+"Input",dropdown:attrs.id+"Dropdown",selectedOpts:attrs.id+"SelectedOpts",selectedOpt:attrs.id+"SelectedOpt",remove:attrs.id+"Remove",opt:attrs.id+"Opt"},scope.id=attrs.id,scope.ids=attrs.ids,jrgMultiselectData.data[attrs.id]={ids:attrs.ids,opts:{},blurCoords:{left:-1,right:-1,top:-1,bottom:-1},skipBlur:!1,lastSearchVal:"",attrs:attrs,maxWrite:25},jrgMultiselectData.init({}),scope.config1={};var defaultConfig={createNew:0};if(scope.config&&void 0!==scope.config)for(xx in defaultConfig)scope.config1[xx]=void 0===scope.config[xx]?defaultConfig[xx]:scope.config[xx];else scope.config1=defaultConfig;initNgModel({}),void 0===scope.options&&(scope.options={}),scope.modelInput="",scope.loadingOpt=!1,scope.createNewAllowed=!0;var keycodes={enter:13,tab:9},evtTimings={selectOptBlurReset:225,clickInputBlurReset:225,onBlurDelay:125},optsList={"default":libArray.copyArray(scope.selectOpts,{})};scope.opts=[],scope.filteredOpts=[],scope.selectedOpts=[],$timeout(function(){jrgMultiselectData.getFocusCoords(attrs.id,{}),jrgMultiselectData.toggleDropdown(attrs.id,{hide:!0}),angular.element(document.getElementById(jrgMultiselectData.data[attrs.id].ids.input)).bind("blur",function(){$timeout(function(){jrgMultiselectData.data[attrs.id].skipBlur||(attrs.debug&&console.log("skipBlur: "+jrgMultiselectData.data[attrs.id].skipBlur),jrgMultiselectData.blurInput(attrs.id,{}))},evtTimings.onBlurDelay)}),angular.element(document.getElementById(jrgMultiselectData.data[attrs.id].ids.input)).bind("keyup",function(evt){scope.keydownInput(evt,{})})},50),scope.focusInput=function(){document.getElementById(jrgMultiselectData.data[attrs.id].ids.input)&&document.getElementById(jrgMultiselectData.data[attrs.id].ids.input).focus(),scope.clickInput({})},scope.keydownInput=function(evt){evt.keyCode==keycodes.enter&&(scope.filteredOpts.length>0?scope.selectOpt(scope.filteredOpts[0],{}):scope.config1.createNew&&scope.createNewOpt({}))},scope.filterOpts=function(){scope.filteredOpts=$filter("filter")(scope.opts,{name:scope.modelInput,selected:"0"}),scope.filteredOpts.length<1&&(scope.createNewAllowed=scope.config1.createNew&&createNewCheck({})?!0:!1)},scope.clickInput=function(){scope.filterOpts({}),jrgMultiselectData.data[attrs.id].skipBlur=!0,jrgMultiselectData.toggleDropdown(attrs.id,{show:!0}),$timeout(function(){jrgMultiselectData.data[attrs.id].skipBlur=!1,attrs.debug&&console.log("clickInput skipBlur reset, skipBlur: "+jrgMultiselectData.data[attrs.id].skipBlur)},evtTimings.clickInputBlurReset)},scope.selectOpt=function(opt){var valChanged=!1;jrgMultiselectData.data[attrs.id].skipBlur=!0,attrs.debug&&console.log("selectOpt. skipBlur: "+jrgMultiselectData.data[attrs.id].skipBlur),$timeout(function(){jrgMultiselectData.data[attrs.id].skipBlur=!1,attrs.debug&&console.log("selectOpt skipBlur reset, skipBlur: "+jrgMultiselectData.data[attrs.id].skipBlur)},evtTimings.selectOptBlurReset);var index1;index1=libArray.findArrayIndex(scope.ngModel,"",opt.val,{oneD:!0}),0>index1&&(scope.ngModel.push(opt.val),valChanged=!0),index1=libArray.findArrayIndex(scope.selectedOpts,"val",opt.val,{}),0>index1&&(opt.selected="1",scope.selectedOpts.push(opt)),scope.modelInput="",document.getElementById(jrgMultiselectData.data[attrs.id].ids.input)&&document.getElementById(jrgMultiselectData.data[attrs.id].ids.input).focus(),scope.filterOpts({}),valChanged&&void 0!==attrs.onChangeEvt&&scope.$emit(attrs.onChangeEvt,{val:scope.ngModel})},scope.removeOpt=function(opt,params){var index1,valChanged=!1;index1=libArray.findArrayIndex(scope.ngModel,"",opt.val,{oneD:!0}),index1>-1&&(valChanged=!0,scope.ngModel.splice(index1,1),removeDisplayOpt(opt,params)),valChanged&&void 0!==attrs.onChangeEvt&&scope.$emit(attrs.onChangeEvt,{val:scope.ngModel})},scope.$on("jrgMultiselectUpdateOpts",function(evt,params){if(params.id==attrs.id){var defaults={type:"default",replace:!0};params=angular.extend(defaults,params),optsList[params.type]=void 0===optsList[params.type]||params.replace===!0?params.opts:optsList[params.type].concat(params.opts),formOpts({}),selectOpts(scope.ngModel,{})}}),scope.createNewOpt=function(){if(createNewCheck({})){void 0===optsList.created&&(optsList.created=[]);var newOpt={val:scope.modelInput,name:scope.modelInput,selected:"0"};optsList.created[optsList.created.length]=newOpt,formOpts({}),scope.selectOpt(newOpt,{})}},formOpts({}),selectOpts(scope.ngModel,{}),scope.$watch("ngModel",function(newVal,oldVal){angular.equals(oldVal,newVal)||(removeOpts({valsToRemove:oldVal,displayOnly:!0}),initNgModel({}),selectOpts(scope.ngModel,{}))}),scope.$watch("selectOpts",function(newVal,oldVal){angular.equals(oldVal,newVal)||(optsList["default"]=newVal,formOpts({}),selectOpts(scope.ngModel,{}))})}}}]).factory("jrgMultiselectData",["jrgLibArray","$rootScope",function(){var inst={data:{},timeout:{searchOpts:{trig:!1,delay:250}},inited:!1,init:function(){if(!this.inited){var thisObj=this;document.onclick=function(evt){for(var xx in thisObj.data){var instId=xx;thisObj.data[instId].blurCoords.top>-1&&(thisObj.mouseInDiv(evt,"",{coords:thisObj.data[instId].blurCoords})||thisObj.blurInput(instId,{}))}},this.inited=!0}},toggleDropdown:function(instId,params){var id1=this.data[instId].ids.dropdown,ele=document.getElementById(id1);params.hide===!0?angular.element(ele).addClass("hidden"):angular.element(ele).removeClass("hidden")},getFocusCoords:function(instId){var eles=({displayBox:this.data[instId].ids.displayBox,dropdown:this.data[instId].ids.dropdown},{});eles.displayBox=angular.element(document.getElementById(this.data[instId].ids.displayBox)),eles.dropdown=angular.element(document.getElementById(this.data[instId].ids.dropdown)),this.toggleDropdown(instId,{show:!0});var top1=0,left1=0,right1=0,bottom1=0;eles.displayBox.prop("offsetTop")&&eles.dropdown.prop("offsetTop")?(top1=eles.displayBox.prop("offsetTop"),left1=eles.displayBox.prop("offsetLeft"),bottom1=eles.dropdown.prop("offsetTop")+eles.dropdown.prop("offsetHeight"),right1=left1+eles.displayBox.prop("offsetWidth")):console.log("getFocusCoords prop offset null.."),this.data[instId].blurCoords={left:left1,right:right1,top:top1,bottom:bottom1},this.toggleDropdown(instId,{hide:!0})},blurInput:function(instId){this.data[instId].skipBlur||(this.toggleDropdown(instId,{hide:!0}),this.data[instId].attrs.debug&&console.log("blurInput reset, skipBlur: "+this.data[instId].skipBlur))},mouseInDiv:function(ee,instId,params){var coords;if(params.coords)coords=params.coords;else{var ele1=angular.element(document.getElementById(instId)),left1=ele1.prop("offsetLeft"),top1=ele1.prop("offsetTop"),bottom1=top1+ele1.prop("offsetHeight"),right1=left1+ele1.prop("offsetWidth");coords={left:left1,top:top1,bottom:bottom1,right:right1}}return ee.pageX>=coords.left&&ee.pageX<=coords.right&&ee.pageY>=coords.top&&ee.pageY<=coords.bottom?!0:!1}};return inst}]).factory("jrgLibArray",[function(){var inst={isArray:function(array1){return"[object Array]"===Object.prototype.toString.apply(array1)?!0:!1},copyArray:function(array1,params){var newArray,aa;if(!array1)return array1;if(params||(params={}),params.skipKeys&&void 0!==params.skipKeys||(params.skipKeys=[]),"object"!=typeof array1)return array1;if(this.isArray(array1))for(newArray=[],aa=0;aa<array1.length;aa++)newArray[aa]=array1[aa]&&"object"==typeof array1[aa]?this.copyArray(array1[aa],params):array1[aa];else{newArray={};for(aa in array1){for(var goTrig=!0,ss=0;ss<params.skipKeys.length;ss++)if(params.skipKeys[ss]==aa){goTrig=!1;break}goTrig&&(newArray[aa]=array1[aa]&&"object"==typeof array1[aa]?this.copyArray(array1[aa],params):array1[aa])}}return newArray},findArrayIndex:function(array,key,val,params){var ii,index=-1;if(params.oneD){for(ii=0;ii<array.length;ii++)if(array[ii]==val){index=ii;break}}else for(ii=0;ii<array.length;ii++)if(array[ii][key]==val){index=ii;break}return index}};return inst}]);